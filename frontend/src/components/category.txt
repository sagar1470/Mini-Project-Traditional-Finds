import React, { useEffect, useState } from 'react'
import SummaryApi from '../common'
import { Link } from 'react-router-dom'
import "../App.css"

const CategoryList = () => {
  const [categoryProduct, setCategoryProduct] = useState([])
  const [loading, setLoading] = useState(false)

  const categoryLoading = new Array(15).fill(null)

  const fetchCategoryProduct = async () => {
    const response = await fetch(SummaryApi.categoryProduct.url)
    const dataResponse = await response.json()
    setLoading(false)
    setCategoryProduct(dataResponse.data)

  }

  useEffect(() => {
    fetchCategoryProduct();
  }, [])

  return (

    // <div className='container mx-auto mt-4'>
    //   <div className=" relative md:left-[0rem] lg:left-[-3rem] sm:left-[-4rem] sm:w-[calc(100%+3rem)] md:w-[calc(100%+5rem)] lg:w-[calc(100%+7rem)] rounded-full p-2 overflow-hidden bg-slate-300">

    //     <h2 className='text-2xl font-semibold py-4 bg-gradient-to-r from-red-600 to-red-400 text-transparent bg-clip-text relative group'>
    //      Categories
    //      <span className='absolute bottom-2 left-0 w-full h-[1px] bg-orange-500 bg-opacity-80'></span>
    //     </h2>

    //     {/* <div className='flex items-center p-4 gap-4 justify-between overflow-scroll scrollbar-none'> */}
    //     <div className="flex gap-6 overflow-x-auto scrollbar-thin scrollbar-thumb-gray-300 py-2 scrollbar-none">
    //       {
    //         loading ? (
    //           categoryLoading.map((el, index) => (
    //             <div
    //               key={index}
    //               className="w-16 h-16 md:w-20  md:h-20 rounded-full bg-gray-200 animate-pulse flex-shrink-0" />
    //           ))
    //         ) :
    //           (
    //             categoryProduct.map((product, index) => {
    //               return (
    //                 <Link key={product.category}
    //                   to={`/product-category/${product.category}`}
    //                   className="flex-shrink-0 space-y-2 sm:mr-0 md:mr-4 lg:mr-5 " >

    //                   <div className="w-16 h-16 md:w-20 md:h-20 bg-gray-100 hover:bg-gray-200 rounded-full mix-blend-multiply overflow-hidden flex items-center justify-center shadow-sm transition ">

    //                     <img src={product?.productImage?.[0]}
    //                       alt={product?.category || "Category"}
    //                       className="h-full w-full object-cover hover:scale-110 transition-transform mix-blend-multiply duration-300"/>
    //                   </div>

    //                   <p className="text-sm md:text-base font-medium text-center capitalize">
    //                     {product?.category}
    //                   </p>
    //                 </Link>
    //               )
    //             })
    //           )
    //       }
    //     </div>
    //   </div>
    //   </div>

    <div className='mx-auto mt-16'>
    <div className="">
      
      {/* Animated Categories Container */}
      <div className="relative overflow-hidden py-4">
        <div className="flex gap-8 w-[200%] animate-slide-infinite">
          {(loading ? [...categoryLoading, ...categoryLoading] : [...categoryProduct, ...categoryProduct]).map((item, index) => (
            <div 
              key={index}
              className="flex-shrink-0 space-y-2 mx-2" 
              style={{ width: `${100 / (categoryProduct.length * 2)}%` }}
            >
              {loading ? (
                <div className="w-16 h-16 md:w-20 md:h-20 rounded-full bg-gradient-to-r from-gray-100 to-gray-200 animate-pulse" />
              ) : (
                <Link
                  to={`/product-category/${item.category}`}
                  className="block space-y-2 transform transition-all duration-300 hover:-translate-y-2"
                >
                  <div className="relative w-16 h-16 md:w-28 md:h-28 bg-white rounded-full overflow-hidden shadow-md hover:shadow-lg transition-all duration-300 group mx-auto">
                    <img 
                      src={item?.productImage?.[0]}
                      alt={item?.category || "Category"}
                      className="h-full w-full object-cover transform transition-all duration-300 group-hover:scale-110"
                    />
                    <div className="absolute inset-0 bg-gradient-to-t from-orange-500/20 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300"/>
                  </div>
                  <p className="text-sm md:text-base font-medium text-center capitalize text-black hover:text-orange-600 transition-colors">
                    {item?.category}
                  </p>
                </Link>
              )}
            </div>
          ))}
        </div>
      </div>
    </div>
  </div>
  
  )
}
export default CategoryList
